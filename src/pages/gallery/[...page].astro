---
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import GalleryLightbox from '@/components/GalleryLightbox'
import PageHead from '@/components/PageHead.astro'
import PaginationComponent from '@/components/ui/pagination'
import { SITE } from '@/consts'
import Layout from '@/layouts/Layout.astro'

import type { PaginateFunction } from 'astro'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const imported = import.meta.glob(
    '../../content/gallery/*.{jpg,jpeg,png,webp,avif,gif}',
    {
      eager: true,
      query: '?url',
      import: 'default',
    },
  ) as Record<string, string>

  const images = Object.entries(imported)
    .sort((a, b) => a[0].localeCompare(b[0]))
    .map(([, url]) => url)
  return paginate(images, { pageSize: SITE.galleryPerPage })
}

const { page } = Astro.props
const images = page.data as string[]
---

<Layout class="max-w-3xl">
  <PageHead slot="head" title="Gallery" />
  <Breadcrumbs items={[{ label: 'Gallery', icon: 'lucide:images' }]} />

  <section aria-label="Masonry Gallery" class="gallery-wrapper">
    <div class="masonry">
      {
        images.map((src, index) => (
          <div class="masonry-item" data-index={index}>
            <img src={src} alt="" loading="lazy" decoding="async" />
          </div>
        ))
      }
    </div>
  </section>

  <PaginationComponent
    currentPage={page.currentPage}
    totalPages={page.lastPage}
    baseUrl="/gallery/"
    client:load
  />

  <!-- Lightbox Modal -->
  <div id="lightbox" class="lightbox">
    <div class="lightbox-backdrop"></div>
    <div class="lightbox-content">
      <!-- Close button -->
      <button class="lightbox-close" aria-label="Close lightbox">
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>

      <!-- Navigation buttons -->
      <button class="lightbox-nav lightbox-prev" aria-label="Previous image">
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>

      <button class="lightbox-nav lightbox-next" aria-label="Next image">
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <polyline points="9,18 15,12 9,6"></polyline>
        </svg>
      </button>

      <div class="lightbox-image-container">
        <img id="lightbox-image" src="" alt="" />
      </div>

      <div class="lightbox-counter">
        <span id="current-index">1</span> / <span id="total-images"
          >{page.data.length}</span
        >
      </div>
    </div>
  </div>
  <GalleryLightbox client:only="react" />
</Layout>

<style>
  .gallery-wrapper {
    padding: 1rem;
    margin: 0 auto;
    max-width: 1200px;
  }

  .masonry {
    column-gap: 1rem;
  }

  .masonry {
    column-count: 1;
  }

  @media (min-width: 640px) {
    .masonry {
      column-count: 2;
    }
  }

  @media (min-width: 1024px) {
    .masonry {
      column-count: 3;
    }
  }

  @media (min-width: 1280px) {
    .masonry {
      column-count: 4;
    }
  }

  .masonry-item {
    break-inside: avoid;
    margin-bottom: 1rem;
    position: relative;
    cursor: pointer;
    overflow: hidden;
    border-radius: 8px;
    transition: transform 0.3s ease;
  }

  .masonry-item:hover {
    transform: translateY(-4px);
  }

  .masonry-item img {
    display: block;
    width: 100%;
    height: auto;
    border-radius: 8px;
    background: #111;
    transition: transform 0.3s ease;
  }

  .masonry-item:hover img {
    transform: scale(1.05);
  }

  /* .overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
    border-radius: 8px;
  } */

  .masonry-item:hover .overlay {
    opacity: 1;
  }

  .overlay-icon {
    color: white;
    transform: scale(0.8);
    transition: transform 0.3s ease;
  }

  .masonry-item:hover .overlay-icon {
    transform: scale(1);
  }

  /* Lightbox Styles */
  .lightbox {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 0.3s ease,
      visibility 0.3s ease;
  }

  .lightbox.active {
    opacity: 1;
    visibility: visible;
  }

  .lightbox-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.9);
    cursor: pointer;
    z-index: 1000;
  }

  .lightbox-content {
    position: relative;
    max-width: 90vw;
    max-height: 90vh;
    z-index: 1001;
  }

  .lightbox-close {
    position: fixed;
    top: 20px;
    right: 20px;
    background: rgba(0, 0, 0, 0.7);
    border-radius: 50%;
    padding: 12px;
    border: none;
    color: white;
    cursor: pointer;
    z-index: 1002;
    transition:
      background-color 0.3s ease,
      transform 0.2s ease;
  }

  .lightbox-close:hover {
    background: rgba(0, 0, 0, 0.9);
    transform: scale(1.05);
  }

  .lightbox-nav {
    position: fixed;
    bottom: 20px;
    padding: 15px;
    background: rgba(0, 0, 0, 0.7);
    border-radius: 50%;
    pointer-events: auto;
    border: none;
    color: white;
    cursor: pointer;
    z-index: 1002;
    transition:
      background-color 0.3s ease,
      transform 0.2s ease;
  }

  .lightbox-nav:hover {
    background: rgba(0, 0, 0, 0.9);
    transform: scale(1.05);
  }

  .lightbox-prev {
    left: 20px;
  }

  .lightbox-next {
    right: 20px;
  }

   .lightbox-image-container {
    display: flex;
    align-items: center;
    justify-content: center;
    max-width: 90vw;
    max-height: calc(90vh - 60px);
  }

  .lightbox-image-container img {
    max-width: min(90vw, 1200px);
    max-height: calc(90vh - 60px);
    width: auto;
    height: auto;
    object-fit: contain;
    border-radius: 8px;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
  }
  
  .lightbox-counter {
    position: absolute;
    bottom: -40px;
    left: 50%;
    transform: translateX(-50%);
    color: white;
    font-size: 14px;
    opacity: 0.8;
  }
</style>
